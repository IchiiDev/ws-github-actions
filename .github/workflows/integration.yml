name: continuous-integration
on: push
jobs:
  coding-style:
    runs-on: ubuntu-latest
    steps:
    # Fetch the repository content
      - name: Checkout GH repository
        uses: actions/checkout@master

    # Fetch the banana script
      - name: Get banana script
        run: curl https://raw.githubusercontent.com/Epitech/coding-style-checker/main/coding-style.sh -o /tmp/coding-style.sh; chmod +x /tmp/coding-style.sh

    # Run the banana script
      - name: Run coding-style.sh
        run: /tmp/coding-style.sh . .

    # Display the banana report file content
      - name: Display banana report
        run: cat coding-style-reports.log

    # Return an error if the banana report file is not empty
      - name: Report banana result
        run: |
          NB_ERROR=$(cat coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
            ERRORS=$(cat coding-style-reports.log);
            echo "Banana found $NB_ERROR error(s)"
            echo "$ERRORS"
            exit 1
          fi
          echo "Everything is good ! Keep on coding !"
          exit 0

  compile:
    runs-on: ubuntu-latest
    steps:
    # Fetch the repository content
      - name: Checkout GH repository
        uses: actions/checkout@master

    # Fetch the banana script
      - name: Compile repository
        run: make

    # Check if the binary is present in the repository
      - name: Check binary presence
        run: |
          if [ ! -f ./swapupcase ]; then
            echo "Binary not found"
            exit 1
          fi
          echo "Binary found"
          exit 0

  run-tests:
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: [compile, coding-style]
    steps:
    # Fetch the repository content
      - name: Checkout GH repository
        uses: actions/checkout@master

    # Compile unit tests
      - name: Compile unit tests
        run: make compile_tests

    # Run unit tests
      - name: Run unit tests
        run: ./unit_testing

    # Run Integration tests
      - name: Run integration tests
        run: ./integration_testing

